const TelegramBot = require('node-telegram-bot-api')
const token = '7617660731:AAGKj-foVh8SEoJUY2YW49kGAkquJ1_aqO8'
const bot = new TelegramBot(token, { polling: true })
const webAppUrl = 'https://jamilbottestone.netlify.app'

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('message', async msg => {
	const chatId = msg.chat.id
	const text = msg.text

	if (text === '/start') {
		try {
			// –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π
			await bot.sendMessage(
				chatId,
				'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!, –î–µ–Ω—å 4, –≠—Ç–æ –º–æ–π –ø–µ—Ä–≤—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç —Ç–µ–ª–µ–≥—Ä–∞–º –Ω–∞ –±–∞–∑–µ mini apps —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ React / Node.js / –°–¥–µ–ª–∞–Ω —Ç–æ–∫–∞ –º–∏–Ω–∏ –∫–∞—Ç–∞–ª–æ–≥ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º / –µ—Å–ª–∏ –æ–±–Ω–∞—Ä—É–∂–∏—Ç–µ –±–∞–≥ –Ω–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ ',
				{
					reply_markup: {
						keyboard: [
							[
								{
									text: 'üìù –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É',
									web_app: { url: webAppUrl + '/form' },
								},
							],
							[{ text: '‚ÑπÔ∏è –ü–æ–º–æ—â—å' }],
						],
						resize_keyboard: true,
					},
				}
			)


			// –ò–Ω–ª–∞–π–Ω –∫–Ω–æ–ø–∫–∞ –¥–ª—è –º–∞–≥–∞–∑–∏–Ω–∞
			await bot.sendMessage(chatId, '–ü–æ—Å–µ—Ç–∏—Ç–µ –Ω–∞—à —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞–≥–∞–∑–∏–Ω –º–µ–±–µ–ª–∏:', {
				reply_markup: {
					inline_keyboard: [
						[{ text: 'üõçÔ∏è –°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑', web_app: { url: webAppUrl } }],
					],
				},
			})
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', error)
			await bot.sendMessage(
				chatId,
				'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
			)
		}
	}
})

// –û—Ç–¥–µ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
bot.on('web_app_data', async msg => {
	const chatId = msg.chat.id

	if (msg.web_app_data?.data) {
		try {
			const data = JSON.parse(msg.web_app_data.data)
			console.log('–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ:', data)

			// –§–æ—Ä–º–∏—Ä—É–µ–º –∫—Ä–∞—Å–∏–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–∞–Ω–Ω—ã–º–∏
			let responseText =
				`üìù *–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é!*\n\n` +
				`üë§ *–ò–º—è:* ${data.userName || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}\n` +
				`üë• *–§–∞–º–∏–ª–∏—è:* ${data.surName || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}\n` +
				`üì± *–¢–µ–ª–µ—Ñ–æ–Ω:* ${data.phoneNumber || '–Ω–µ —É–∫–∞–∑–∞–Ω'}`

			// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
			await bot.sendMessage(chatId, responseText, { parse_mode: 'Markdown' })

			// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å—é
			await bot.sendMessage(
				chatId,
				'–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã! –í—Å–µ –∑–∞ —Ç–æ–±–æ–π –≤—ã–µ—Ö–∞–ª–∏ –∂–¥–∏ ).'
			)
		} catch (e) {
			console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã:', e)
			await bot.sendMessage(
				chatId,
				'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.'
			)
		}
	}
})

bot.on('polling_error', error => {
	console.error('Polling error:', error)
})

console.log('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')
